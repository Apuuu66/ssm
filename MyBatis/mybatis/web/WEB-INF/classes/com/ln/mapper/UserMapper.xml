<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 namespace 命名空间，作用就是对sql进行分类化管理,理解为sql隔离
 注意：使用mapper代理方法开发，namespace有特殊重要的作用
 -->
<mapper namespace="com.ln.mapper.UserMapper">
    <select id="findUserById" parameterType="java.lang.Integer"
            resultType="com.ln.pojo.User">SELECT * FROM `user` WHERE id = #{id}</select>
    <select id="findUserByUserName" parameterType="java.lang.String" resultType="com.ln.pojo.User">
        SELECT * from user WHERE username LIKE #{NAME}
    </select>
    <select id="findUserByName" parameterType="java.lang.String" resultType="com.ln.pojo.User">
        SELECT * from user WHERE username LIKE '%${value}%'
    </select>


    <insert id="insertUser" parameterType="com.ln.pojo.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO `user` (`username`, `birthday`, `sex`, `address`) VALUES (#{username}, #{birthday}, #{sex},
        #{address})
    </insert>

    <!--设置主键-->
    <insert id="setUUID" parameterType="com.ln.pojo.Uuid">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
            SELECT UUID_SHORT()
        </selectKey>
        INSERT INTO `uuid` (`id`, `name`) VALUES (#{id}, #{name})
    </insert>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        DELETE FROM `user` WHERE (`id`=#{id})
    </delete>

    <update id="updateUser" parameterType="com.ln.pojo.User">
        UPDATE `user` SET `address`=#{address} WHERE (`id`=#{id})
    </update>
</mapper>